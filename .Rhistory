Welcome!
tinytex::install_tinytex()
bookdown::render_book()
bookdown::serve_book()
bookdown::server_book()
install.packages("servr")
library(servr)
bookdown::serve_book()
setwd("C:/Users/Usuario/OneDrive - Escuela Politécnica Nacional/Libros/pseudolibro/SPFDA_Book")
gc()
gc()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
esta representación de $f$ se conoce como la expansión en series de Fourier en el intervalo $[-\pi,\pi]$ y donde $a_k,b_k$ son conocidos como los coeficientes de Euler-Fourier de $f$ \cite{kreider} y este tipo de expansión se utiliza para aproximar datos periódicos.
### {-}
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::render_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::render_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::render_book()
bookdown::serve_book()
bookdown::render_book()
bookdown::serve_book()
servr::daemon_stop(1)
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
knitr::include_graphics("variograma_partes.PNG")
knitr::include_graphics("variograma_partes.PNG")
knitr::include_graphics("variograma_partes.PNG")
knitr::include_graphics("variograma_partes.PNG")
knitr::include_graphics("variograma_partes.PNG")
knitr::include_graphics("variograma_partes.PNG")
knitr::include_graphics("variograma_partes.png")
knitr::include_graphics("nice-fig-1.png")
knitr::include_graphics("figuras/otros/variograma_partes.PNG")
knitr::include_graphics("figuras/otros/variograma_partes.PNG")
knitr::include_graphics("figuras/otros/variograma_partes.PNG")
library(knitr)
knitr::include_graphics("figuras/otros/variograma_partes.PNG")
knitr::include_graphics("figuras/otros/variograma_partes.PNG")
bookdown::render_book()
bookdown::serve_book()
options(knitr.graphics.auto_pdf = TRUE)
options(knitr.graphics.auto_pdf = TRUE)
knitr::include_graphics("figuras/otros/variograma_partes.PNG")
#options(knitr.graphics.auto_pdf = TRUE)
knitr::include_graphics("figuras/otros/variograma_partes.PNG")
bookdown::render_book()
bookdown::serve_book()
#options(knitr.graphics.auto_pdf = TRUE)
knitr::include_graphics("figuras/otros/distancia_h.png")
#options(knitr.graphics.auto_pdf = TRUE)
knitr::include_graphics("figuras/otros/var_cloud.png")
#options(knitr.graphics.auto_pdf = TRUE)
knitr::include_graphics("figuras/otros/tolerancia.png")
bookdown::serve_book()
options(knitr.graphics.auto_pdf = TRUE)
knitr::include_graphics("figuras/otros/tolerancia.png")
#options(knitr.graphics.auto_pdf = TRUE)
knitr::include_graphics("figuras/otros/var_comp.png")
#options(knitr.graphics.auto_pdf = TRUE)
knitr::include_graphics("figuras/otros/vari_sill.png")
knitr::include_graphics("{figuras/otros/coord_trend.png")
knitr::include_graphics("figuras/otros/coord_trend.png")
knitr::include_graphics("figuras/otros/rcoord_trend.png")
knitr::include_graphics("figuras/otros/den_var.png")
knitr::include_graphics("figuras/otros/iso_dir.png")
knitr::include_graphics("figuras/otros/iso_dir.png")
knitr::include_graphics("figuras/otros/iso_dir.png")
bookdown::serve_book()
bookdown::render_book()
bookdown::render_book()
knitr::include_graphics("figuras/otros/sph_var.png")
knitr::include_graphics("figuras/otros/pepita_var.png")
knitr::include_graphics("figuras/otros/exp_var.png")
knitr::include_graphics("figuras/otros/gau_var.png")
knitr::include_graphics("figuras/otros/cub_var.png")
knitr::include_graphics("figuras/otros/estable_var.png")
knitr::include_graphics("figuras/otros/caugen_var.png")
knitr::include_graphics("figuras/otros/mat_var.png")
knitr::include_graphics("figuras/otros/bes_var.png")
knitr::include_graphics("figuras/otros/sin_var.png")
bookdown::render_book()
bookdown::render_book()
bookdown::serve_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::serve_book()
knitr::include_graphics("figuras/otros/suves_fda.png")
bookdown::render_book()
bookdown::serve_book()
bookdown::render_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::create_gitbook()
bookdown::render_book()
bookdown::serve_book()
bookdown::serve_book()
#options(knitr.graphics.auto_pdf = TRUE)
knitr::include_graphics("figuras/otros/tolerancia.png")
bookdown::render_book()
bookdown::serve_book()
bookdown::render_book()
bookdown::serve_book()
unlink("index_cache", recursive = TRUE)
gc()
```{=tex}
\begin{align}
C[(s_i,t_i),(s_j,t_j)]&=C_s(s_i,s_j)C_t(t_i,t_j)
(\#eq:separ)
\end{align}
```
$$
\begin{align*}
C(\boldsymbol h, u)&=C(\boldsymbol h,-u)\\
&=C(-\boldsymbol h, u)\\
&=C(-\boldsymbol h, -u)
\end{align*}
$$
#### Función de covarianza espacialmente isotrópica {.unnumbered}
tinytex::install_tinytex()
library(tinytex)
tinytex::install_tinytex()
bookdown::render_book()
bookdown::serve_book()
library(bookdown)
bookdown::render_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
calcium %>% group_by(area) %>%
summarise(media=mean(values))
library(tidyverse)
calcium %>% group_by(area) %>%
summarise(media=mean(values))
library(geoR)
data(ca20)
calcium %>% group_by(area) %>%
summarise(media=mean(values))
calcium %>% group_by(area) %>%
summarise(media=mean(values))
calcium %>% group_by(area) %>%
summarise(media=mean(values))
install.packages("forward")
library(foward)
library(forward)
calcium %>% group_by(area) %>%
summarise(media=mean(values))
calcium %>% group_by(area)
library(forward)
calcium %>% group_by(area) %>%
summarise(media=mean(values))
## cuadrante 3
grid.xy=coord[1:30,]
m1=curve(v.f(x,cov.model="pure.nugget", cov.pars = c(0, 1)),from = 0, to = 2,
xlab = "distance", ylab = expression(Covariances), lty = 1,
main = "Parameters Covarianza Gaussian") %>% data.frame()
m1$y=1-m1$y
pta2=ggplot(m1[2:101,],aes(x,y))+
geom_line(size=2,col="darkblue")+
theme_bw(base_size = 20)+ylim(c(0.95,1.015))+
labs(x="Distancia",y="Variograma",title = "Variograma Pepita Puro")
grid.arrange(arrangeGrob(pta,pta2,ncol = 2),ncol=1)
m1=curve(v.f(x,cov.model="pure.nugget", cov.pars = c(0, 1)),from = 0, to = 2,
xlab = "distance", ylab = expression(Covariances), lty = 1,
main = "Parameters Covarianza Gaussian") %>% data.frame()
esf_sin <- gstat(formula = z ~ 1, locations = ~ x + y, beta = 1, dummy = TRUE,
model = vgm(psill = 4, model = "Gau", range = 2.5), nmax = 20)
#model = variogramLine(vgm(psill = 2, model = "Sph", range = 1, nugget = 1.5),2,n=120,covariance = TRUE)
set.seed(23)
esf <- predict(esf_sin, newdata = grid.xy, nsim = 4)
names(esf)[3]="Valor"
cuts <- seq(min(esf$Valor)-0.5, max(esf$Valor)+0.5, length = 10)
esf$Valor <- cut(esf$Valor, breaks = cuts, include.lowest = TRUE)
sp1=ggplot(esf,aes(x,y,color=Valor))+
geom_point(size=4)+theme_bw(base_size = 20)+
scale_colour_brewer(palette = "Blues", drop = FALSE)+
theme(legend.position = "none")+
labs(title = "Variable regionalizada",x="",y="")
m1=curve(v.f(x,cov.model="gaussian", cov.pars = c(4, 2.5)),from = 0, to = 2,
xlab = "distance", ylab = expression(Covariances), lty = 1,
main = "Parameters Covarianza Gaussian") %>% data.frame()
#m1=model
#plot(model)
names(m1)=c("x","y")
m1$y=1-m1$y
pts=data.frame(x=m1$x,y=m1$y+(rnorm(101,0.02,0.1)))
hist(pts$y,freq = FALSE)
sp2=ggplot(m1,aes(x,y))+
geom_line(size=2,col="darkblue")+
geom_point(data=pts,aes(x,y),size=2)+
theme_bw(base_size = 20)+#ylim(c(0,3.6))+
labs(x="Distancia",y="Varianza",title = "")
grid.arrange(arrangeGrob(sp1,sp2,ncol = 2),ncol=1)
library(gridExtra)
### Esférico
esf_sin <- gstat(formula = z ~ 1, locations = ~ x + y, beta = 1, dummy = TRUE,
model = vgm(psill = 4, model = "Gau", range = 2.5), nmax = 20)
#model = variogramLine(vgm(psill = 2, model = "Sph", range = 1, nugget = 1.5),2,n=120,covariance = TRUE)
set.seed(23)
esf <- predict(esf_sin, newdata = grid.xy, nsim = 4)
names(esf)[3]="Valor"
cuts <- seq(min(esf$Valor)-0.5, max(esf$Valor)+0.5, length = 10)
esf$Valor <- cut(esf$Valor, breaks = cuts, include.lowest = TRUE)
sp1=ggplot(esf,aes(x,y,color=Valor))+
geom_point(size=4)+theme_bw(base_size = 20)+
scale_colour_brewer(palette = "Blues", drop = FALSE)+
theme(legend.position = "none")+
labs(title = "Variable regionalizada",x="",y="")
m1=curve(v.f(x,cov.model="gaussian", cov.pars = c(4, 2.5)),from = 0, to = 2,
xlab = "distance", ylab = expression(Covariances), lty = 1,
main = "Parameters Covarianza Gaussian") %>% data.frame()
#m1=model
#plot(model)
names(m1)=c("x","y")
m1$y=1-m1$y
pts=data.frame(x=m1$x,y=m1$y+(rnorm(101,0.02,0.1)))
hist(pts$y,freq = FALSE)
sp2=ggplot(m1,aes(x,y))+
geom_line(size=2,col="darkblue")+
geom_point(data=pts,aes(x,y),size=2)+
theme_bw(base_size = 20)+#ylim(c(0,3.6))+
labs(x="Distancia",y="Varianza",title = "")
grid.arrange(arrangeGrob(sp1,sp2,ncol = 2),ncol=1)
library(ggplot2)
### Esférico
esf_sin <- gstat(formula = z ~ 1, locations = ~ x + y, beta = 1, dummy = TRUE,
model = vgm(psill = 4, model = "Gau", range = 2.5), nmax = 20)
#model = variogramLine(vgm(psill = 2, model = "Sph", range = 1, nugget = 1.5),2,n=120,covariance = TRUE)
set.seed(23)
esf <- predict(esf_sin, newdata = grid.xy, nsim = 4)
names(esf)[3]="Valor"
cuts <- seq(min(esf$Valor)-0.5, max(esf$Valor)+0.5, length = 10)
esf$Valor <- cut(esf$Valor, breaks = cuts, include.lowest = TRUE)
sp1=ggplot(esf,aes(x,y,color=Valor))+
geom_point(size=4)+theme_bw(base_size = 20)+
scale_colour_brewer(palette = "Blues", drop = FALSE)+
theme(legend.position = "none")+
labs(title = "Variable regionalizada",x="",y="")
m1=curve(v.f(x,cov.model="gaussian", cov.pars = c(4, 2.5)),from = 0, to = 2,
xlab = "distance", ylab = expression(Covariances), lty = 1,
main = "Parameters Covarianza Gaussian") %>% data.frame()
#m1=model
#plot(model)
names(m1)=c("x","y")
m1$y=1-m1$y
pts=data.frame(x=m1$x,y=m1$y+(rnorm(101,0.02,0.1)))
hist(pts$y,freq = FALSE)
sp2=ggplot(m1,aes(x,y))+
geom_line(size=2,col="darkblue")+
geom_point(data=pts,aes(x,y),size=2)+
theme_bw(base_size = 20)+#ylim(c(0,3.6))+
labs(x="Distancia",y="Varianza",title = "")
grid.arrange(arrangeGrob(sp1,sp2,ncol = 2),ncol=1)
sp1=ggplot(esf,aes(x,y,color=Valor))+
geom_point(size=4)+theme_bw(base_size = 20)+
scale_colour_brewer(palette = "Blues", drop = FALSE)+
theme(legend.position = "none")+
labs(title = "Variable regionalizada",x="",y="")
### Esférico
esf_sin <- gstat(formula = z ~ 1, locations = ~ x + y, beta = 1, dummy = TRUE,
model = vgm(psill = 4, model = "Gau", range = 2.5), nmax = 20)
#model = variogramLine(vgm(psill = 2, model = "Sph", range = 1, nugget = 1.5),2,n=120,covariance = TRUE)
set.seed(23)
esf <- predict(esf_sin, newdata = grid.xy, nsim = 4)
### Esférico
esf_sin <- gstat(formula = z ~ 1, locations = ~ x + y, beta = 1, dummy = TRUE,
model = vgm(psill = 4, model = "Gau", range = 2.5), nmax = 20)
library(gstat)
grid.xy <- expand.grid(x = seq(0, 2, 0.2), y = seq(0, 2, 0.2))
v.f <- function(x, ...){cov.spatial(x, ...)}
### Esférico
esf_sin <- gstat(formula = z ~ 1, locations = ~ x + y, beta = 1, dummy = TRUE,
model = vgm(psill = 4, model = "Gau", range = 2.5), nmax = 20)
#model = variogramLine(vgm(psill = 2, model = "Sph", range = 1, nugget = 1.5),2,n=120,covariance = TRUE)
set.seed(23)
esf <- predict(esf_sin, newdata = grid.xy, nsim = 4)
names(esf)[3]="Valor"
cuts <- seq(min(esf$Valor)-0.5, max(esf$Valor)+0.5, length = 10)
esf$Valor <- cut(esf$Valor, breaks = cuts, include.lowest = TRUE)
sp1=ggplot(esf,aes(x,y,color=Valor))+
geom_point(size=4)+theme_bw(base_size = 20)+
scale_colour_brewer(palette = "Blues", drop = FALSE)+
theme(legend.position = "none")+
labs(title = "Variable regionalizada",x="",y="")
m1=curve(v.f(x,cov.model="gaussian", cov.pars = c(4, 2.5)),from = 0, to = 2,
xlab = "distance", ylab = expression(Covariances), lty = 1,
main = "Parameters Covarianza Gaussian") %>% data.frame()
#m1=model
#plot(model)
names(m1)=c("x","y")
m1$y=1-m1$y
pts=data.frame(x=m1$x,y=m1$y+(rnorm(101,0.02,0.1)))
hist(pts$y,freq = FALSE)
sp2=ggplot(m1,aes(x,y))+
geom_line(size=2,col="darkblue")+
geom_point(data=pts,aes(x,y),size=2)+
theme_bw(base_size = 20)+#ylim(c(0,3.6))+
labs(x="Distancia",y="Varianza",title = "")
grid.arrange(arrangeGrob(sp1,sp2,ncol = 2),ncol=1)
